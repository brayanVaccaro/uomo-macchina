@inject IHtmlLocalizer<UomoMacchina.Areas.Main.Data.MainViewModel> ModelLocalizer
@model UomoMacchina.Areas.Main.Data.MainViewModel


@*
    1. FUNZIONA --> Inserire il campo Straordinario di tipo bool nella Rendicontazione
    2. FUNZIONA --> Al click sulla riga devo poter editare l'elemento cliccato
    3. Gestire la creazione di un elemento (aggiungerlo nella tabella specifica dell'elemento scelto) e del relativo evento (aggiungere l'evento alla tabella Eventi):
        Clicco un bottone, mi esce il modale (Edit.cshtml) per inserire i dati.
        La prima scelta nel modale sarà quella di selezionare cosa voglio aggiungere e in base a questa scelta mostrare o nascondere elementi del form
    
    4. FUNZIONA (PER COMMESSA, PER DATA, PER DETTAGLI) --> Ricerca di un dato --> implementazione da zero
    5. Colori da cambiare
    6. Sidebar implementare il cambio del mese al click sulla freccia, migliorare il css. Al clik su una settimana ti deve portare nel vue-cal alla settimana cliccata
    7.pulizia del codice
8. modificare la section ereditata dal layout globale _Layout.cshtml
9. migliorare _SingleDay
10. implementare un modo per convertire da un elemento di un ViewModel ad un EventoDTO
    *@
    @{
// Lista vuota per memorizzare le informazioni delle proprietà che corrispondono al criterio
var viewModelProperties = new List<string>();
// Tutte le proprietà del modello
var properties = Model.GetType().GetProperties();
    foreach (var prop in properties)
    {
        // Il tipo della proprietà contiene "ViewModel"?
        if (prop.PropertyType.ToString().Contains("ViewModel") && !prop.PropertyType.ToString().Contains("Main"))
        {
            // Ottieni il valore della proprietà
            var value = prop.GetValue(Model);
    


            //Aggiungo alla lista
            viewModelProperties.Add($"{prop.Name}: {value?.ToString() ?? "null"}");
        }
    }
}
@section pageTitle {

}

<div class="container-fluid">
    <div class="row">
        <div class="col-2">
            @await Html.PartialAsync("~/Views/Shared/_SideBar.cshtml", @Model.Anno)

        </div>
        @* Calendario Settimanale *@
        <div :class="customClass">
            <vue-cal ref="vuecal"
                     v-model:active-view="activeView"
                     v-model:selected-date="selectedDate"
                     locale="it"
                     :on-event-click="onEventClick"
                     :disable-views="['years', 'year', 'month', '', '']"
                     :events="event"
                     :time-from="8 * 60"
                     :time-to="24 * 60"
                     :cell-click-hold="false"
                     :drag-to-create-event="false" />
        </div>


        <div v-if="showSingleDay" class="col-8">
            <partial name="@MVC.Main.Main.Views._SingleDay" model="Model" />
        </div>

        <div v-if="showEditForm" class="col-8">
            <partial name="@MVC.Main.Main.Views.EditForm" />
        </div>
    </div>
</div>

@section styles {
    <link href="~/css/bundle-vue-cal.css" asp-append-version="true" rel="stylesheet" />
    <link href="~/css/main.css" asp-append-version="true" rel="stylesheet" />
    <link href="~/css/richieste.css" rel="stylesheet" />
    <link href="~/css/sidebar.css" rel="stylesheet" />
}

@section scripts {
    <script src="~/js/site.js" type="module" asp-append-version="true"></script>
    
    <script src="~/js/main.js" type="module" asp-append-version="true"></script>


    <script type="text/javascript">
        var mainModel = @Html.Raw(Model.ToJson());
        var filteredProperties = @Html.Raw(Json.Serialize(viewModelProperties));
        console.log(filteredProperties)
        console.log(mainModel)
    </script>

}




@*
    1. Inserire il campo Straordinario di tipo bool nella Rendicontazione
    2. Al clikc sulla riga devo poter editare l'elemento cliccato
    3. Gestire la creazione di un elemento (aggiungerlo nella tabella specifica dell'elemento scelto) e del relativo evento (aggiungere l'evento alla tabella Eventi):
        Clicco un bottone, mi esce il modale (Edit.cshtml) per inserire i dati.
        La prima scelta nel modale sarà quella di selezionare cosa voglio aggiungere e in base a questa scelta mostrare o nascondere elementi del form

    4. Ricerca di un dato --> implementazione da zero
    5. Colori da cambiare
    6. Sidebar implementare il cambio del mese al click sulla freccia, miglirare il css. Al clik su una settimana ti deve portare nel vue-cal alla settimana cliccata

    7.pulizia del codice
    8. modificare la section ereditata dal layout globale _Layout.cshtml
    9. migliorare _SingleDay

*@

@*
VISUALIZZAZIONE
1) all'avvio, quindi quando si entra in main, si devono visualizzare la sidebar (calendario 1) nel calendario 2 e gli eventi della settimana (la visualizzazione di questo calendario è impostata su week). Il SingleDay è all'inizio nascosto tramite v-if

2)  nel calendario 1, al click sul giorno della settimana:
        1. nel calendario 2 si devono vedere gli eventi del giorno cliccato --> nel calendario 2 la visualizzazione deve passare da week a day
        2. SingleDay viene mostrato (true il parametro di v-if) sulla destra del calendario 2. SingleDay deve mostrare tutti gli eventi del giorno scelto in formato tabellare.

3) al click su un singolo evento, nel calendario 2, verrà mostrato nel SingleDay solo info relative al singolo evento cliccato


INSERIMENTO DATI:
Ci devono essere due bottoni: Aggiungi, Modifica, ELimina. In Agiungi e Modifica ci sarà un bottone Annulla (per annullare la creazione o la modifica), quando si clicca Elimina un bottone di conferma(sicuro di voler eliminare?)

al click su Aggiungi: si apre il form, seleziono cosa voglio aggiungere, vengono disabilitati/abilitati campi da inserire sulla base della scelta, si preme invia, si salva nel db, si ritorna al Main

al click su Modifica: si apre il form con i campi preimpostati sulla base della scelta fatta, si possono modificare i campi che escono a schermo, si conferma la modifica, si aggiorna ciò che è stato modificato nel db, si ritorna al Main

al click su Elimina: si elimina ciò che si è scelto di eliminare
*@